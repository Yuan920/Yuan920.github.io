I"-)<h5 id="前言">前言</h5>
<p>网上关于苹果证书的生成和设置的教程比较多，但大多数只是讲了相关流程和步骤，有的也只是简要进行了相关说明，总之介绍的不够详细，自己最初在接触的时候也是比较困惑，下面进行总结。请结合其他苹果证书的配置教程进行学习<a href="https://blog.csdn.net/holydancer/article/details/9219333">传送门</a>。</p>

<h5 id="关于证书">关于证书</h5>

<p>1.首先通过钥匙串访问——证书助理——从证书颁发机构请求证书——填写证书信息（邮箱，常用名称，存储到磁盘）——存储为（自定义名称.<code class="language-plaintext highlighter-rouge">certSigningReuqest</code>，简称<code class="language-plaintext highlighter-rouge">CSR</code>文件，只是为了提交到苹果开发者账号中，然后就没用了）到本地<br />
2.苹果开发者账号中，创建证书（<code class="language-plaintext highlighter-rouge">Development</code>和<code class="language-plaintext highlighter-rouge">Production</code>）——上传<code class="language-plaintext highlighter-rouge">CSR</code>文件——下载证书运行 （ <code class="language-plaintext highlighter-rouge">xxx.cer</code>文件）</p>
<blockquote>
  <p>注意：只有在当前电脑中生成本地生成证书，上传到苹果开发账号，然后下载cer文件运行后，钥匙串中才有证书以及对应的秘钥</p>
</blockquote>

<p><img src="/img/20160316/1.png" alt="项目1" />
<img src="/img/20160316/2.png" alt="项目2" />
<img src="/img/20160316/3.png" alt="项目3" />
<img src="/img/20160316/4.png" alt="项目4" />
<img src="/img/20160316/5.png" alt="项目5" /></p>

<p>如果开发者B，登录开发者账号，下载证书（<code class="language-plaintext highlighter-rouge">cer</code>文件）运行，只有证书没有秘钥，是不能正常使用的</p>

<p><img src="/img/20160316/6.png" alt="项目6" /></p>

<p>所以如果有新同事加入到开发组的时候，应该从本地钥匙串中选择证书，导出<code class="language-plaintext highlighter-rouge">p12</code>文件（包含证书和秘钥）给同事。另外可以给同事一份<code class="language-plaintext highlighter-rouge">Provisioning Profiles</code>文件（配置文件），用于本地开发识别测试设备</p>
<blockquote>
  <p>导出<code class="language-plaintext highlighter-rouge">p12</code>文件：钥匙串——选择证书——右键导出——存储为——设置<code class="language-plaintext highlighter-rouge">p12</code>文件密码<br />
发给同事后，双击<code class="language-plaintext highlighter-rouge">p12</code>文件，输入密码，本地安装证书成功</p>
</blockquote>

<p>需要强调一点，证书和项目关系其实并不大，证书一般有效期只有一年，当证书过期后，只需要重新生成一份证书，上传到开发者账号就行，同时因为原有证书过期，需要重新生成<code class="language-plaintext highlighter-rouge">Provisioning Profiles</code>文件。然后给同事们最新的<code class="language-plaintext highlighter-rouge">p12</code>文件和<code class="language-plaintext highlighter-rouge">Provisioning Profiles</code>文件就行</p>

<p>所以开发者账号中的证书，配置文件是可以放心操作的（比如误删了，或者找不到证书秘钥了）</p>

<p><code class="language-plaintext highlighter-rouge">Xcode</code>中添加苹果开发者账号</p>

<p><code class="language-plaintext highlighter-rouge">Xcode</code>工具栏——<code class="language-plaintext highlighter-rouge">Xcode</code>——<code class="language-plaintext highlighter-rouge">Preferences</code>——<code class="language-plaintext highlighter-rouge">Accounts</code>—— 左下角 <code class="language-plaintext highlighter-rouge">Add Apple ID</code> ——输入苹果账号，密码</p>

<p>在项目的<code class="language-plaintext highlighter-rouge">target</code>——<code class="language-plaintext highlighter-rouge">general</code>——team中可以选择项目对应的开发者账号</p>

<p><img src="/img/20160316/7.png" alt="项目7" /></p>

<blockquote>
  <p>当<code class="language-plaintext highlighter-rouge">bulid</code>的新设备未在开发者账号的<code class="language-plaintext highlighter-rouge">devices</code>添加<code class="language-plaintext highlighter-rouge">devicetoken</code>的时候，<code class="language-plaintext highlighter-rouge">xcode</code>会进行提示无法识别设备，可以在<code class="language-plaintext highlighter-rouge">xcode</code>中<code class="language-plaintext highlighter-rouge">fix issue</code>，<code class="language-plaintext highlighter-rouge">xcode</code>会自动在开发者账号中，创建一个新的针对这个设备的<code class="language-plaintext highlighter-rouge">Provisioning Profiles</code>配置文件，然后安装到本地，唯一的不好就是开发者账号的配置文件下会有很多零散的配置文件.</p>
</blockquote>

<h5 id="关于app的发布">关于App的发布</h5>

<p>修改项目的<code class="language-plaintext highlighter-rouge">version</code>，以及项目的版本<code class="language-plaintext highlighter-rouge">debug</code>为<code class="language-plaintext highlighter-rouge">release</code></p>

<blockquote>
  <p><code class="language-plaintext highlighter-rouge">debug</code>改为<code class="language-plaintext highlighter-rouge">release</code>后需要进行测试，一些第三方类库可能<code class="language-plaintext highlighter-rouge">release</code>版会有一些不兼容</p>
</blockquote>

<p><code class="language-plaintext highlighter-rouge">Product</code>——<code class="language-plaintext highlighter-rouge">Scheme</code>——<code class="language-plaintext highlighter-rouge">Edit Scheme</code> 修改 <code class="language-plaintext highlighter-rouge">Run/Test/Analyze/Archive</code> 的<code class="language-plaintext highlighter-rouge">build configuration</code>  （发布的时候，只需要<code class="language-plaintext highlighter-rouge">Archive</code>就可以了）</p>

<p><img src="/img/20160316/8.png" alt="项目8" /></p>

<p>苹果开发者中心——<code class="language-plaintext highlighter-rouge">iTunes Connect</code>——我的<code class="language-plaintext highlighter-rouge">APP</code>——创建/选择应用——填写基本修改/添加新版本（构建版本）</p>

<p>发布验证</p>

<p><code class="language-plaintext highlighter-rouge">Product</code>——<code class="language-plaintext highlighter-rouge">Desination</code>——选择<code class="language-plaintext highlighter-rouge">iOS Device</code></p>

<p><code class="language-plaintext highlighter-rouge">Product</code>——<code class="language-plaintext highlighter-rouge">Archive</code>——右侧点击<code class="language-plaintext highlighter-rouge">Validate</code>——选择证书——<code class="language-plaintext highlighter-rouge">validate</code>——等待——<code class="language-plaintext highlighter-rouge">Validate Successful</code>——右侧点击<code class="language-plaintext highlighter-rouge">Submit to App Store</code>（提交构建版本）——<code class="language-plaintext highlighter-rouge">Submission Successful</code></p>

<p><img src="/img/20160316/9.png" alt="项目9" /></p>

<p><img src="/img/20160316/10.png" alt="项目10" /></p>

<p><img src="/img/20160316/11.png" alt="项目11" /></p>

<p>苹果开发者中心——<code class="language-plaintext highlighter-rouge">iTunes Connect</code>——我的<code class="language-plaintext highlighter-rouge">APP</code>——选择应用——提交构建版本成功——选择自动发布/手动发布——提交审核</p>

<p>等待审核</p>

<h5 id="关于苹果内购">关于苹果内购</h5>

<p>传送门：<a href="http://mobile.51cto.com/iphone-410162.htm">专题：iOS应用内置付费IAP</a></p>

<p><img src="/img/20160316/12.png" alt="项目12" /></p>

<p>购买流程：</p>

<ol>
  <li>
    <p>程序向服务器发送请求，获得一份产品列表。</p>
  </li>
  <li>
    <p>服务器返回包含产品标识符的列表。</p>
  </li>
  <li>
    <p>程序向App Store发送请求，得到产品的信息。</p>
  </li>
  <li>
    <p>App Store返回产品信息。</p>
  </li>
  <li>
    <p>程序把返回的产品信息显示给用户（App的store界面）</p>
  </li>
  <li>
    <p>用户选择某个产品</p>
  </li>
  <li>
    <p>程序向App Store发送支付请求</p>
  </li>
  <li>
    <p>App Store处理支付请求并返回交易完成信息。</p>
  </li>
  <li>
    <p>程序从信息中获得数据，并发送至服务器。</p>
  </li>
  <li>
    <p>服务器纪录数据，并进行审(我们的)查。</p>
  </li>
  <li>
    <p>服务器将数据发给App Store来验证该交易的有效性。</p>
  </li>
  <li>
    <p>App Store对收到的数据进行解析，返回该数据和说明其是否有效的标识。</p>
  </li>
  <li>
    <p>服务器读取返回的数据，确定用户购买的内容。</p>
  </li>
  <li>
    <p>服务器将购买的内容传递给程序。</p>
  </li>
</ol>

<p>因为涉及到<code class="language-plaintext highlighter-rouge">ipa</code>破解软件，存在假购买情况，需要后台进行订单验证</p>

<p>下图自己画的基于ios7的购买流程图（前后台接口调用验证等）</p>

<p><img src="/img/20160316/13.jpg" alt="项目13" /></p>

<h5 id="环境">环境</h5>

<p><strong>测试环境</strong><br />
验证地址:<code class="language-plaintext highlighter-rouge">https://sandbox.itunes.apple.com/verifyReceipt</code><br />
<strong>正式环境</strong><br />
验证地址:<code class="language-plaintext highlighter-rouge">https://buy.itunes.apple.com/verifyReceipt</code><br />
<strong>状态码</strong></p>
<blockquote>
  <p>21000 App Store无法读取你提供的JSON数据  <br />
21002 收据数据不符合格式<br />
21003 收据无法被验证<br />
21004 你提供的共享密钥和账户的共享密钥不一致<br />
21005 收据服务器当前不可用<br />
21006 收据是有效的，但订阅服务已经过期。当收到这个信息时，解码后的收据信息也包含在返回内容中<br />
21007 收据信息是测试用（sandbox），但却被发送到产品环境中验证<br />
21008 收据信息是产品环境中使用，但却被发送到测试环境中验证</p>
</blockquote>

:ET