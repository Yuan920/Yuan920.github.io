I"<h4 id="h5">H5</h4>
<p>H5只要提示用户长按保存图片就可以了，浏览器自带保存图片功能。</p>

<h4 id="app小程序">App+小程序</h4>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;!-- #ifdef APP-PLUS --&gt;
&lt;image :src="图片地址"  mode="aspectFill" @longpress="savePhoto(图片地址)"/&gt;
&lt;!-- #endif --&gt;
&lt;!-- #ifdef MP --&gt;
&lt;image :src="图片地址"  mode="aspectFill" @longpress="savePosterPath(图片地址)"/&gt;
&lt;!-- #endif --&gt;
</code></pre></div></div>
<h5 id="app保存图片">APP保存图片</h5>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>// APP保存图片
savePhoto(downloadUrl) {
  // 先下载图片
  uni.downloadFile({
    url:downloadUrl,
    success: (res) =&gt; {
      // 获取到图片本地地址后再保存图片到相册（因为此方法不支持远程地址）
      uni.saveImageToPhotosAlbum({
        filePath: res.tempFilePath,
        success: () =&gt; {
          uni.showToast({
            title: "保存成功！",
          });
        },
        fail: () =&gt; {
          uni.showToast({
            title: "保存失败",
          });
        },
      });
    },
  });
},
</code></pre></div></div>
<h5 id="小程序保存图片授权后保存">小程序保存图片（授权后保存）</h5>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>// 小程序保存图片
savePosterPath(downloadUrl) {
  uni.downloadFile({
    url:downloadUrl,
    success: (resFile) =&gt; {
      console.log(resFile, "resFile");
      if (resFile.statusCode === 200) {
        uni.getSetting({
          success: (res) =&gt; {
            if (!res.authSetting["scope.writePhotosAlbum"]) {
              uni.authorize({
                scope: "scope.writePhotosAlbum",
                success: () =&gt; {
                  uni.saveImageToPhotosAlbum({
                    filePath: resFile.tempFilePath,
                    success: (res) =&gt; {
                      return uni.showToast({
                        title: "保存成功！",
                      });
                    },
                    fail: (res) =&gt; {
                      return uni.showToast({
                        title: res.errMsg,
                      });
                    },
                    complete: (res) =&gt; {},
                  });
                },
                fail: () =&gt; {
                  uni.showModal({
                    title: "您已拒绝获取相册权限",
                    content: "是否进入权限管理，调整授权？",
                    success: (res) =&gt; {
                      if (res.confirm) {
                        uni.openSetting({
                          success: (res) =&gt; {
                            console.log(res.authSetting);
                          },
                        });
                      } else if (res.cancel) {
                        return uni.showToast({
                          title: "已取消！",
                        });
                      }
                    },
                  });
                },
              });
            } else {
              uni.saveImageToPhotosAlbum({
                filePath: resFile.tempFilePath,
                success: (res) =&gt; {
                  return uni.showToast({
                    title: "保存成功！",
                  });
                },
                fail: (res) =&gt; {
                  return uni.showToast({
                    title: res.errMsg,
                  });
                },
                complete: (res) =&gt; {},
              });
            }
          },
          fail: (res) =&gt; {},
        });
      } else {
        return uni.showToast({
          title: resFile.errMsg,
        });
      }
    },
    fail: (res) =&gt; {
      return uni.showToast({
        title: res.errMsg,
      });
    },
  });
},      
</code></pre></div></div>

<h4 id="补充app和小程序保存base64图片到本地的方法">补充：APP和小程序保存base64图片到本地的方法</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>saveBase64Img(base64) {
  // #ifdef APP-PLUS
  let imageStr = "data:image/png;base64," + base64;
  // 保存到本地
  let bitmap = new plus.nativeObj.Bitmap("goods_poster");
  bitmap.loadBase64Data(
    imageStr,
    () =&gt; {
      console.log("加载Base64图片数据成功");
      bitmap.save(
        "_doc/goods_poster.png",
        {},
        (i) =&gt; {
          console.log("保存图片成功：" + JSON.stringify(i));
          bitmap.clear();
        },
        (e) =&gt; {
          onsole.log("保存图片失败：" + JSON.stringify(e));
          bitmap.clear();
        }
      );
    },
    (e) =&gt; {
      console.log("加载Base64图片数据失败：" + JSON.stringify(e));
      bitmap.clear();
    }
  );
  // #endif
  // #ifdef MP
  var fileManager = uni.getFileSystemManager();
  fileManager.writeFile({
    filePath: "/img.jpg", // 指定图片的临时路径
    data: base64, // 要写入的文本或二进制数据
    encoding: "base64", // 指定写入文件的字符编码
    success: (res) =&gt; {
      console.log("写入文件成功，文件路径信息为：", res);
      转换本地路径成功后这里可以用上面的图片保存方法
    },
    file: (err) =&gt; {
      console.log("写入文件失败", err);
    },
  });
  // #endif
}
</code></pre></div></div>

:ET