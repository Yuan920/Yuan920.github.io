I"Y<h5 id="sdwebimage">SDWebimage</h5>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>SDWebImageDownloader *downloader = [SDWebImageDownloader sharedDownloader];
[downloader setValue:@"你的域名" forHTTPHeaderField:@"Referer"];

</code></pre></div></div>

<h5 id="yywebimage">YYWebImage</h5>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>YYWebImageManager *yyImg = [YYWebImageManager sharedManager];
NSMutableDictionary *yy_m_dic = [NSMutableDictionary dictionaryWithDictionary:yyImg.headers];
[yy_m_dic setValue:baserUrl forKey:@"Referer"];
yyImg.headers = [yy_m_dic mutableCopy];
</code></pre></div></div>

<h4 id="网络下载">网络下载</h4>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>NSURL *url = [NSURL URLWithString:href];
NSURLRequest *request = [NSURLRequest requestWithURL:url];
NSMutableURLRequest *m_reques = [request mutableCopy];
[m_reques addValue:h5url forHTTPHeaderField:@"referer"];
request = [m_reques copy];
</code></pre></div></div>

<h5 id="zfplayer">ZFPlayer</h5>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ZFIJKPlayerManager *playerManager = [[ZFIJKPlayerManager alloc] init];
NSString *ijkRef = [NSString stringWithFormat:@"Referer:%@\r\n",@"你的域名"];
[playerManager.options setFormatOptionValue:ijkRef forKey:@"headers"];
</code></pre></div></div>

<h5 id="avplayer">AVPlayer</h5>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>NSDictionary *header = @{@"Referer":@"你的域名"};
NSURL *url = [NSURL URLWithString:@"http://sksk2.afadd.cn/upload/preview/waichu/waichu.m3u8"];
AVURLAsset *urlAssert = [AVURLAsset URLAssetWithURL:url options:@{@"AVURLAssetHTTPHeaderFieldsKey" : header}];
AVPlayerItem *playItem = [AVPlayerItem playerItemWithAsset:urlAssert];
self.player = [[AVPlayer alloc] initWithPlayerItem:playItem];

</code></pre></div></div>

<h5 id="jpvideoplayer改源文件">JPVideoPlayer【改源文件】</h5>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>- (void)startDownloadOpeartionWithRequestTask:(JPResourceLoadingRequestWebTask *)requestTask
                                      options:(JPVideoPlayerDownloaderOptions)options {
    if (!self.downloadTimeout) {
        self.downloadTimeout = 15.f;
    }

    // In order to prevent from potential duplicate caching (NSURLCache + JPVideoPlayerCache),
    // we disable the cache for video requests if told otherwise.
    NSMutableURLRequest *request = [[NSMutableURLRequest alloc] initWithURL:requestTask.customURL
                                                                cachePolicy:(NSURLRequestReloadIgnoringLocalCacheData)
                                                            timeoutInterval:self.downloadTimeout];
    request.allHTTPHeaderFields = @{@"referer":@"你的域名"}.mutableCopy;

    request.HTTPShouldHandleCookies = (options &amp; JPVideoPlayerDownloaderHandleCookies);
    request.HTTPShouldUsePipelining = YES;
    if (!self.urlCredential &amp;&amp; self.username &amp;&amp; self.password) {
        self.urlCredential = [NSURLCredential credentialWithUser:self.username
                                                        password:self.password
                                                     persistence:NSURLCredentialPersistenceForSession];
    }
    NSString *rangeValue = JPRangeToHTTPRangeHeader(requestTask.requestRange);
    if (rangeValue) {
        [request setValue:rangeValue forHTTPHeaderField:@"Range"];
    }

    self.runningTask = requestTask;
    requestTask.request = request;
    requestTask.unownedSession = self.session;
    JPDebugLog(@"Downloader 处理完一个请求");
}

</code></pre></div></div>

<h5 id="svgaplayer改源文件">SVGAPlayer【改源文件】</h5>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>- (void)parseWithURL:(nonnull NSURL *)URL
     completionBlock:(void ( ^ _Nonnull )(SVGAVideoEntity * _Nullable videoItem))completionBlock
        failureBlock:(void ( ^ _Nullable)(NSError * _Nullable error))failureBlock {
    NSMutableURLRequest  * request = [NSMutableURLRequest requestWithURL:URL cachePolicy:NSURLRequestReturnCacheDataElseLoad timeoutInterval:20];
    //rk_Referer
    request.allHTTPHeaderFields = @{@"referer":@"你的域名"};
    [self parseWithURLRequest:request
              completionBlock:completionBlock
                 failureBlock:failureBlock];
}
</code></pre></div></div>

:ET